{
  "swagger": "2.0",
  "info": {
    "description": "This is documentation for FlexxWare API from Soluvine GmbH.  You can find out more about Soluvine solutions at [https://soluvine.com/flexxlink](https://soluvine.com/flexxlink).  </br> The FlexxWare API is using REST API to define its endpoints. This page also provides sample Authorization information and sample responses to each API endpoint.",
    "version": "1.2.0",
    "title": "FlexxWare for Dynamics 365 Finance and Operations",
    "termsOfService": "https://soluvine.com/",
    "contact": {
      "email": "flexx@soluvine.com"
    },
    "license": {
      "name": "Soluvine GmbH",
      "url": "https://soluvine.com/flexxlink/"
    }
  },
  "host": "yourcloudd365aos.axcloud.dynamics.com",
  "basePath": "/api/services/",
  "tags": [
    {
      "name": "Document archive",
      "description": "Endpoint to archive documents in D365 F&O.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://soluvine.com/flexxstore/"
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/FXSInboundServices/FXSDocArchiveService/addFile": {
      "post": {
        "tags": [
          "Document archive"
        ],
        "summary": "Adds a file with it s contents and metadata to document archive.",
        "description": "",
        "operationId": "addFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An entry in the document archive.",
            "schema": {
              "$ref": "#/definitions/AddFile"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiArchiveResponse"
            }
          },
          "400": {
            "description": "bad request structure",
            "schema": {
              "$ref": "#/definitions/Api400Response"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Api500Response"
            }
          }
        }
      }
    },
    "/FXSInboundServices/FXSDocArchiveService/scanFile": {
      "post": {
        "tags": [
          "Document archive"
        ],
        "summary": "Adds a scanned file with barcode reference to document archive.",
        "description": "",
        "operationId": "scanFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An entry in the document archive.",
            "schema": {
              "$ref": "#/definitions/ScanFile"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiArchiveResponse"
            }
          },
          "400": {
            "description": "bad request structure",
            "schema": {
              "$ref": "#/definitions/Api400Response"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Api500Response"
            }
          }
        }
      }
    },
    "/FXSInboundServices/FXSDocArchiveService/indexFile": {
      "post": {
        "tags": [
          "Document archive"
        ],
        "summary": "Indexes a file in document archive with metadata and link.",
        "description": "",
        "operationId": "indexFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An entry in the document archive.",
            "schema": {
              "$ref": "#/definitions/IndexFile"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "bad request structure",
            "schema": {
              "$ref": "#/definitions/Api400Response"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Api500Response"
            }
          }
        }
      }
    },
    "/FXLInboundServices/FXLIntegrationStatusLogService/getStatus": {
      "post": {
        "tags": [
          "Status log interface"
        ],
        "summary": "Retrieve status and log information of a FlexxLink message.",
        "description": "",
        "operationId": "getStaus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Retrieves status and log information of a FlexxLink message.",
            "schema": {
              "$ref": "#/definitions/GetStatus"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiStatusResponse"
            }
          },
          "400": {
            "description": "bad request structure",
            "schema": {
              "$ref": "#/definitions/Api400Response"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Api500Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetStatus": {
      "type": "object",
      "properties": {
        "_contract": {
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "message": {
              "$ref": "#/definitions/Message"
            },
            "integrationJobId": {
              "type": "string",
              "description": "Use integrationJobId or messageId to get the status and log information. If both are provided, integrationJobId is used to get the information."
            },
            "messageId": {
              "type": "string",
              "description": "Use integrationJobId or messageId to get the status and log information. If both are provided, integrationJobId is used to get the information."
            }
          }
        }
      }
    },
    "AddFile": {
      "type": "object",
      "properties": {
        "_contract": {
          "type": "object",
          "properties": {
            "fileData": {
              "type": "string",
              "description": "base64 encoded file contents"
            },
            "companyId": {
              "type": "string",
              "description": "Legal entity in D365 F&O"
            },
            "docArchive": {
              "type": "object",
              "required": [
                "fileName",
                "typeId"
              ],
              "properties": {
                "fileName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "typeId": {
                  "type": "string",
                  "description": "Validated against the list of Document types in D365 F&O ECM Document Management"
                }
              }
            },
            "docArchiveRef": {
              "type": "object",
              "required": [
                "accountTypestr",
                "referenceTypeId"
              ],
              "properties": {
                "accountTypestr": {
                  "type": "string",
                  "description": "Vendor, Customer or None",
                  "enum": [
                    "Vend",
                    "Cust",
                    "None"
                  ]
                },
                "agreementId": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "custVendAccount": {
                  "type": "string"
                },
                "documentDate": {
                  "type": "string",
                  "format": "date"
                },
                "documentId": {
                  "type": "string"
                },
                "internalReference": {
                  "type": "string"
                },
                "inventBatchId": {
                  "type": "string"
                },
                "note": {
                  "type": "string"
                },
                "projId": {
                  "type": "string"
                },
                "quotationId": {
                  "type": "string"
                },
                "referenceId": {
                  "type": "string"
                },
                "referenceTypeId": {
                  "type": "string",
                  "description": "Validated against the list of Reference types in D365 F&O ECM Document Management"
                },
                "trader": {
                  "type": "integer",
                  "description": "RecId of the Worker entry in D365 F&O"
                }
              }
            }
          }
        }
      }
    },
    "ScanFile": {
      "type": "object",
      "properties": {
        "_contract": {
          "type": "object",
          "properties": {
            "fileData": {
              "type": "string",
              "description": "base64 encoded file contents"
            },
            "companyId": {
              "type": "string",
              "description": "Legal entity in D365 F&O"
            },
            "docArchive": {
              "type": "object",
              "required": [
                "fileName"
              ],
              "properties": {
                "fileName": {
                  "type": "string"
                },
                "scanTypeId": {
                  "type": "string",
                  "description": "Use only if Scan type is defined and required."
                }
              }
            },
            "docArchiveRef": {
              "type": "object",
              "required": [
                "barcodeId"
              ],
              "properties": {
                "barcodeId": {
                  "type": "string",
                  "description": "Id of the barcode as generated in D365 F&O ECM Document Management."
                }
              }
            }
          }
        }
      }
    },
    "IndexFile": {
      "type": "object",
      "properties": {
        "_contract": {
          "type": "object",
          "properties": {
            "companyId": {
              "type": "string",
              "description": "Legal entity in D365 F&O"
            },
            "docArchive": {
              "type": "object",
              "required": [
                "fileName",
                "typeId",
                "connectionId"
              ],
              "properties": {
                "fileName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "fileUrl": {
                  "type": "string",
                  "format": "url"
                },
                "typeId": {
                  "type": "string",
                  "description": "Validated against the list of Document types in D365 F&O ECM Document Management"
                },
                "connectionId": {
                  "type": "string",
                  "description": "Must match the Connection name in D365 F&O ECM Document Management"
                }
              }
            },
            "docArchiveRef": {
              "type": "object",
              "properties": {
                "accountTypestr": {
                  "type": "string",
                  "description": "Vendor, Customer or None",
                  "enum": [
                    "Vend",
                    "Cust",
                    "None"
                  ]
                },
                "agreementId": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "custVendAccount": {
                  "type": "string"
                },
                "documentDate": {
                  "type": "string",
                  "format": "date"
                },
                "documentId": {
                  "type": "string"
                },
                "internalReference": {
                  "type": "string"
                },
                "inventBatchId": {
                  "type": "string"
                },
                "note": {
                  "type": "string"
                },
                "projId": {
                  "type": "string"
                },
                "quotationId": {
                  "type": "string"
                },
                "referenceId": {
                  "type": "string"
                },
                "referenceTypeId": {
                  "type": "string",
                  "description": "Validated against the list of Reference types in D365 F&O ECM Document Management"
                },
                "trader": {
                  "type": "integer",
                  "description": "RecId of the Worker entry in D365 F&O"
                }
              }
            }
          }
        }
      }
    },
    "Message": {
      "type": "object",
      "required": [
        "applicationId",
        "companyId",
        "messageId",
        "messageTimeStamp"
      ],
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "messageTimeStamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "$id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "jobStatus": {
          "type": "integer",
          "format": "int32",
          "description": "None => 0 <br />  Pending => 11 <br />  Processing => 12 <br /> Processed => 13 <br /> Retry => 14 <br /> Error => 15"
        },
        "jobMessage": {
          "type": "string"
        }
      },
      "example": {
        "$id": "1",
        "status": "200",
        "message": "Importierte Bestelldaten",
        "jobId": "2023-06-09T12:59:49-0DABEE0293684C87B2E1B2D7AA65E770",
        "jobStatus": "13",
        "JobMessage": "Job '2023-06-09T12:59:49-0DABEE0293684C87B2E1B2D7AA65E770' has been processed succesfully."
      }
    },
    "ApiArchiveResponse": {
      "type": "object",
      "properties": {
        "$id": {
          "type": "string"
        },
        "docArchiveId": {
          "type": "string"
        },
        "docTypeId": {
          "type": "string"
        }
      },
      "example": {
        "$id": "1",
        "docArchiveId": "USMF-0060280",
        "docTypeId": "Expense receipt"
      }
    },
    "Api400Response": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        },
        "ExceptionType": {
          "type": "string"
        },
        "ActivityId": {
          "type": "string"
        }
      },
      "example": {
        "Message": "An exception occured when deserializing the request - Exception occurred when parsing and deserializing parameter '_contract' - 'Parameter '_contract' is not found within the request content body.",
        "ExceptionType": "XppServicesDeserializationException",
        "ActivityId": "15eeee57-9ac2-0001-4325-ef15c29ad901"
      }
    },
    "Api500Response": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        },
        "ExceptionType": {
          "type": "string"
        },
        "ActivityId": {
          "type": "string"
        }
      },
      "example": {
        "Message": "An exception occured when invoking the operation - Schnittstelle PurchTableCreate_WS Verarbeitung FXLIntegrationProcess_In_PurchTableCreate ist nicht aktiv oder Integrationsteilnehmer nicht identifiziert (Die Suche nach dem Integrationspartner erfolgt über eine Kombination aus Schnittstelle, Konto/GLN/Barcode und Anwendung).",
        "ExceptionType": "ErrorException",
        "ActivityId": "15eeee57-9ac2-0001-4325-ef15c29ad902"
      }
    },
    "ApiStatusResponse": {
      "type": "object",
      "properties": {
        "$id": {
          "type": "string"
        },
        "logStatus": {
          "type": "object",
          "properties": {
            "$id": {
              "type": "string"
            },
            "validationErrors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationErrors"
              }
            },
            "logDateTime": {
              "type": "string",
              "format": "date-time"
            },
            "integrationJobId": {
              "type": "string"
            },
            "logStatus": {
              "type": "integer",
              "description": "None => 0 <br />  Job Pending => 11 <br />  Job Processing => 12 <br /> Job Processed => 13 <br /> Job Retry => 14 <br /> Job Error => 15 <br /> Import Imported => 21 <br /> Import Validated => 22 <br /> Import Posted => 23 <br /> Import Validation Error => 24 <br /> Import Posting Error => 25 <br /> Import Cancelled => 26 <br /> Import Approved => 27 <br /> Import Rejected => 28"
            },
            "logStatusStr": {
              "type": "string"
            },
            "logMessage": {
              "type": "string"
            },
            "errorCode": {
              "type": "string"
            },
            "messageId": {
              "type": "string"
            },
            "eventName": {
              "type": "string"
            },
            "logRecId": {
              "type": "number"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "jobStatus": {
          "description": "None => 0 <br />  Pending => 11 <br />  Processing => 12 <br /> Processed => 13 <br /> Retry => 14 <br /> Error => 15",
          "type": "integer",
          "format": "int32"
        },
        "jobMessage": {
          "type": "string"
        }
      },
      "example": {
        "$id": "1",
        "logStatus": {
          "$id": "2",
          "validationErrors": [
            {
              "$id": 3,
              "validationResultStr": "Error",
              "logText": "Correct Country/region must be specified; Correct ZIP/postal code must be specified; Correct Street must be specified",
              "errorCode": ""
            },
            {
              "$id": 4,
              "validationResultStr": "Error",
              "logText": "Receive date must be later than or equal to the ship date.",
              "errorCode": ""
            }
          ],
          "logDateTime": "2025-03-18T21:38:45.000Z",
          "integrationJobId": "2025-03-18T22:38:38-48DE416636BA42F59EEF1567C1331B6F",
          "logStatus": 9,
          "logStatusStr": "Job processed",
          "logMessage": null,
          "errorCode": null,
          "messageId": null,
          "eventName": "SalesTableCreate_WS",
          "logRecId": 5637144579,
          "message": null
        },
        "status": "200",
        "message": "Integration status retrieved",
        "jobId": "2025-03-18T22:50:58-C939790BCA784CC8B2D35ACD83F7F8D1",
        "jobStatus": "2",
        "JobMessage": "Job '2025-03-18T22:50:58-C939790BCA784CC8B2D35ACD83F7F8D1' has been processed succesfully.   "
      }
    },
    "ValidationErrors": {
      "type": "object",
      "properties": {
        "$id": {
          "type": "string"
        },
        "validationResultStr": {
          "type": "string"
        },
        "logText": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about FlexxWare",
    "url": "https://soluvine.com/products"
  }
}